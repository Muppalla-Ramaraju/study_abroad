name: Full Deploy Pipeline

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: "Name of the target you're deploying (optional)"
        required: false
        default: "default"

env:
  AWS_REGION: us-west-2
  TF_WORKING_DIR: muppalla-ramaraju-study_abroad/terraform-project

jobs:
  deploy-iac:
    name: Terraform Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Export Terraform Outputs
        id: tf_outputs
        run: |
          echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT

  deploy-lambda:
    name: Upload Lambda Code
    needs: deploy-iac
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Zip createUser Lambda
        run: |
          mkdir lambda-package
          cp muppalla-ramaraju-study_abroad/backend/createUser.py lambda-package/lambda_function.py
          cd lambda-package
          zip -r ../createUser.zip .
          cd ..

      - name: Update Lambda Function Code
        run: |
          aws lambda update-function-code \
            --function-name createUser \
            --zip-file fileb://createUser.zip \
            --region ${{ env.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-frontend:
    name: Deploy Public Website
    needs: deploy-iac
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Sync Public Folder to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ needs.deploy-iac.outputs.s3_bucket_name }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: muppalla-ramaraju-study_abroad/public

      - name: Invalidate CloudFront Cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ needs.deploy-iac.outputs.cloudfront_distribution_id }}
          PATHS: '/*'
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
